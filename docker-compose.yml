networks:
  default:
services:
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
  mongodb-primary:
    image: docker.io/bitnami/mongodb:5.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    volumes:
      - 'mongodb_master_data:/bitnami/mongodb'
    ports:
      - '27018:27017'
  redis:
    image: redis
    command: /bin/sh -c "redis-server --requirepass password"
    environment:
      - REDIS_PASSWORD=password
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
      - REDIS_DATABASE=0
      - REDIS_PORT=6379
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
  mysql-db:
    container_name: mysql-db
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_PASSWORD
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - mysql-volume:/var/lib/mysql:rw
      - ./mysql-db:/docker-entrypoint-initdb.d/
    networks:
      - default
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: development
    command: npm run start:dev api
    env_file:
      - ./apps/api/.env
    depends_on:
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '5000:5000'
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - mongodb-primary
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  products:
    build:
      context: .
      dockerfile: ./apps/products/Dockerfile
      target: development
    command: npm run start:dev products
    environment:
      - DB_HOST=$MYSQLDB_HOST
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_PASSWORD
      - DB_DATABASE=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
    env_file:
      - ./apps/products/.env
    depends_on:
      - mongodb-primary
      - rabbitmq
      - mysql-db
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  billing:
    build:
      context: .
      dockerfile: ./apps/billing/Dockerfile
      target: development
    command: npm run start:dev billing
    env_file:
      - ./apps/billing/.env
    depends_on:
      - mongodb-primary
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  chat:
    build:
      context: .
      dockerfile: ./apps/chat/Dockerfile
      target: development
    command: npm run start:dev chat
    env_file:
      - ./apps/chat/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '4001:4001'
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - mongodb-primary
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  mongodb_master_data:
    driver: local
  mysql-db:
  mysql-volume: